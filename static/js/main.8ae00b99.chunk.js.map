{"version":3,"sources":["components/card/Circle.js","components/card/Review.js","components/card/Card.js","components/input/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Circle","check","className","Review","star","review","position","writer","makeCircle","allCircle","increase","push","Card","props","src","process","alt","Input","baseText","maxLength","read","disable","useState","text","setText","initialText","state","setState","length","count","setCount","onSubmit","e","preventDefault","placeholder","onChange","console","log","target","value","readOnly","disabled","type","defaultProps","App","style","display","flexDirection","height","justifyContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ae00b99.chunk.js","sourcesContent":["import React from 'react';\nimport './Circle.scss';\nfunction Circle({ check }) {\n  return <div className={`circle ${check}`} />;\n}\n\nexport default Circle;\n","import React from 'react';\nimport Circle from './Circle';\n\nfunction Review({ star, review, position, writer }) {\n  const makeCircle = () => {\n    const allCircle = [];\n    let increase = 0;\n    for (increase; increase < star; increase++) {\n      allCircle.push(<Circle check={'check'} key={increase} />);\n    }\n    for (increase; increase < 5; increase++) {\n      allCircle.push(<Circle key={increase} />);\n    }\n    return allCircle;\n  };\n\n  return position === 'vertical' ? (\n    <div className=\"card_review\">\n      <div className=\"circle_container\">{makeCircle()}</div>\n      {review ? <div className=\"review\">{review}</div> : null}\n    </div>\n  ) : (\n    <div className=\"card_review\">\n      <div className=\"circle_container\">{makeCircle()}</div>\n      <p className=\"writer\"> | {writer}</p>\n    </div>\n  );\n}\n\nexport default Review;\n","import React from 'react';\nimport './Card.scss';\nimport Review from './Review';\n\nfunction Card(props) {\n  const { star, review, position, writer } = props;\n  return position === 'vertical' ? (\n    // image 영역\n    // 내용 영역\n    // 별점, 후기영역\n\n    <div className={`card ${position}`}>\n      <img src={process.env.PUBLIC_URL + '/images/logo.png'} alt=\"itemImage\" />\n      <div className=\"card_content\">\n        <h3 className=\"label\">Card Label</h3>\n        <h2 className=\"title\">Card Title</h2>\n        <p className=\"paragraph\">\n          <strong>Hilight</strong> <span>Croos Out</span>\n        </p>\n      </div>\n      {star && review ? (\n        <Review star={star} review={review} position={position} />\n      ) : null || star ? (\n        <Review star={star} position={position} />\n      ) : null}\n    </div>\n  ) : (\n    <div className={`card ${position}`}>\n      <img src={process.env.PUBLIC_URL + '/images/logo.png'} alt=\"itemImage\" />\n      <div className=\"card_content_container\">\n        <div className=\"card_content\">\n          <h2 className=\"title\">Card Label</h2>\n          <p className=\"description\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\n            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n            mollit anim id est laborum.\n          </p>\n        </div>\n        {star ? <Review position={position} star={star} writer={writer} /> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useState } from 'react';\nimport './Input.scss';\n\nfunction Input({ baseText, maxLength, read, disable }) {\n  const [text, setText] = useState(baseText || '');\n  const [initialText, setInitialText] = useState(baseText || '');\n  const [state, setState] = useState('default');\n  const [count, setCount] = useState(baseText ? baseText.length : 0);\n\n  const countWord = (e) => {\n    console.log(e.target.value.length);\n    if (e.target.value.length > maxLength) {\n      return;\n    }\n    setCount(e.target.value.length);\n    setText(e.target.value);\n    // 입력중 상태 변환\n    setState('typing');\n    if (initialText === e.target.value) {\n      setState('default');\n    }\n  };\n\n  return (\n    <form className=\"form-container\" onSubmit={(e) => e.preventDefault()}>\n      <textarea\n        className={`input ${state} ${read} ${disable}`}\n        placeholder={'내용을 입력해주세요'}\n        maxLength={`${maxLength}`}\n        onChange={countWord}\n        value={text}\n        readOnly={read}\n        disabled={disable}\n      />\n      <span className=\"word-count\">{read || disable ? 500 : maxLength - count}</span>\n      <button type=\"submit\" className={`button ${state}`}>\n        Save\n      </button>\n    </form>\n  );\n}\n\nInput.defaultProps = {\n  maxLength: 500,\n  read: '',\n  disable: '',\n};\nexport default Input;\n","import './Reset.css';\nimport './App.css';\nimport Card from './components/card/Card';\nimport Input from './components/input/Input';\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"button-section\" style={{ display: 'flex' }}>\n        <Card\n          position={'vertical'}\n          star={2}\n          review={'Lorem Ipsum is simply dummy text of the printing and typesetting industry.'}\n        />\n        <Card position={'vertical'} star={4} />\n        <Card position={'vertical'} />\n      </div>\n      <br />\n      <Card position={'horizontal'} star={3} writer={'John Doe'} />\n      <br />\n\n      <div\n        className=\"input-section\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '300px',\n          justifyContent: 'space-around',\n        }}\n      >\n        <Input baseText={'초기값이 있을수 있습니다.'} maxLength={300} />\n        <Input baseText={'읽기 전용 상태 입니다'} read={'read-only'} />\n        <Input baseText={'주문 요청사항을 입력해주세요'} disable={'disabled'} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}